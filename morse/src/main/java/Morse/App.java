/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Morse;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

public class App {



    public static void main(String[] args) throws IOException {
        String word;
        Scanner in = new Scanner(System.in);
        int choice;
       // Map<String, String> wordMorse = new HashMap<String, String>();


        System.out.println("Type:\n1: If you want to encode a word; \n2: If you want the 1st challenge; \n3: If you want to find a morse word with a specific pattern");
        choice = Integer.parseInt(in.nextLine());

        if (choice == 1) {

            System.out.println("Type word to encode: ");
            word = in.nextLine();
            System.out.println("You typed: " + word);
            Encode encode = new Encode(word);

            System.out.println("smorse( " + word + " ) => " + encode.EncodeWord());
        }

        else if(choice == 2) {
            System.out.print("Number 2\n");

            FindWord findWord = new FindWord();
            //wordMorse = morseDictionary.getWordMorse(words);
            int numberOfWords = 0;

            System.out.println("Type how many words a morse word should corrispond to: ");
            if(in.hasNextInt()) {
                numberOfWords = in.nextInt();
            }
            else{
                System.out.println("Sorry you didn't insert a number");
            }

            System.out.println("The morse word are/is " + findWord.getMorseWord(numberOfWords));
        }
        else if(choice == 3) {
            System.out.print("Number 3\n");

            FindWord findWord = new FindWord();
            //wordMorse = morseDictionary.getWordMorse(words);
            String pattern;

            System.out.println("Type pattern to match: ");
            pattern = in.next();
            System.out.println(pattern);

            System.out.println("The morse word are/is " + findWord.getUniqueWord(pattern));
        }
        else {System.out.println("Sorry, but your choice is incorrect");}
    }
}
